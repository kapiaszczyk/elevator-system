{
	"info": {
		"_postman_id": "07a5e4db-45fc-49f0-bf26-fffa2a934717",
		"name": "Elevator System",
		"description": "Collection of tests for the Elevator System.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27301696"
	},
	"item": [
		{
			"name": "Start simulation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/start",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"start"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop simulation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/stop",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"stop"
					]
				}
			},
			"response": []
		},
		{
			"name": "Forward simulation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/forward",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"forward"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start simulation in auto mode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/start-auto",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"start-auto"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop simulation in auto mode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/stop-auto",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"stop-auto"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get states",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.not.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/system/state",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"system",
						"state"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update elevator state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/system/elevator/1/state/current-floor/2/destination-floor/3",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"system",
						"elevator",
						"1",
						"state",
						"current-floor",
						"2",
						"destination-floor",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Emit event with custom data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"eventType\": \"FLOOR_DISPATCH_EVENT\",\r\n    \"floorOrigin\": 5,\r\n    \"direction\": \"UP\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/system/event",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"system",
						"event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Emit random event",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/random-event",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"random-event"
					]
				}
			},
			"response": []
		},
		{
			"name": "Start random emitter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/start-emitter",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"start-emitter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop random emitter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/api/v1/simulation/stop-emitter",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						"api",
						"v1",
						"simulation",
						"stop-emitter"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get index page",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"pm.test(\"Response body is not empty\", function () {\r",
							"    const responseData = pm.response.json();\r",
							"    pm.expect(responseData).to.not.be.empty;\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{hostname}}:{{port}}/",
					"protocol": "http",
					"host": [
						"{{hostname}}"
					],
					"port": "{{port}}",
					"path": [
						""
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "hostname",
			"value": "localhost"
		},
		{
			"key": "port",
			"value": "8080"
		}
	]
}